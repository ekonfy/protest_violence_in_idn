vids.view <- aggregate(views ~ category_id, data = vids.unik, FUN = mean)
ggplot(vids.view, aes(x = views, y = reorder(category_id, views))) +
geom_col(aes(fill = category_id),show.legend = F) +
geom_text(aes(label = round(views, 1)), color = "black", size = 3,
nudge_x = -50000) +
labs(title = "Rata-Rata Views di Setiap Category",
subtitle = "Youtube Trending Videos 2017",
x = "",
y = "",
fill = "Kategori Video",
caption = "Source: Youtube")
# daniel kurnia
aggr <- aggregate(views~category_id,data=vids.unik,FUN=mean)
ggplot(data=aggr, mapping=aes(x=views, y=reorder(category_id,views)))+
geom_col(fill = "blue")+
geom_text(aes(label=floor(views)),hjust=1)
aggr <- aggr[order(aggr$views,decreasing = T),]
ggplot(aggr,aes(x = views, y = reorder(category_id,views))) +
geom_col(aes(fill = views)) +
scale_fill_gradient(low = "#030000", high = "#b00404") +
labs(title = "Rata-Rata Views di Setiap Category",
subtitle = "Youtube Trending Videos 2017",
x = "",
y = "",
fill = "Kategori Video",
caption = "Source: Youtube")
levels(aggr$category_id)
#aggregate.data.frame()
aggregate(views ~ category_id,data = vids.unik,FUN = mean)
aggregate.data.frame(x = list(rata_likes = vids.unik$likes,
rata_dislikes = vids.unik$dislikes),
by = list(category = vids.unik$category_id),
FUN = mean)
vids.top.agg <- aggregate.data.frame(x = list(like_ratio = vids.unik$likes/vids.unik$views,
dislike_ratio = vids.unik$dislikes/vids.unik$views),
by = list(category = vids.unik$category_id), mean)
vids.top.agg
knitr::include_graphics("assets/long_wide.png")
library(tidyr)
pivot_longer(data = vids.top.agg,cols = c("like_ratio","dislike_ratio"),
names_to = "ratio",values_to = "Nilai")
library(tidyr)
vids_long <-  pivot_longer(data = vids.top.agg, cols = c("like_ratio","dislike_ratio"))
vids_long
pivot_wider(data = vids_long,id_cols = category,names_from = name,values_from = value)
vids_wide <- pivot_wider(data = vids_long, names_from = name, values_from = value)
vids_wide
ggplot(vids_wide,aes(x = like_ratio, y = category)) +
geom_col()
# vids_wide$category <- reorder(vids_wide$category,vids_wide$like_ratio)
ggplot(vids_wide,aes(x = like_ratio, y = reorder(category,like_ratio))) +
geom_col()
ggplot(vids_long,aes(x= value, y = reorder(category,value))) +
geom_col(aes(fill = name),position = "dodge") +
scale_fill_manual(values = c("blue","firebrick4")) +
geom_text(aes(label = round(value,3)))
# scale_fill_brewer(palette = 9) +
# scale_fill_viridis_d()
vids_long2 <-  pivot_longer(data = vids.top.agg, cols =  c("like_ratio", "dislike_ratio"))
vids_long2
vids_long2$category <- tidytext :: reorder_within(x = vids_long2$category,
by = vids_long2$value,
within = vids_long2$name)
ggplot(vids_long2,aes(x= value, y = reorder(category,value))) +
geom_col(aes(fill = name),position = "dodge", show.legend = F,width = 0.7) +
scale_fill_manual(values = c("blue","firebrick4")) +
geom_text(aes(label = round(value,3)),color = "white",hjust = 0.9,size = 3) +
facet_wrap(~name,scales = "free")+
tidytext::scale_y_reordered()
ggplot(vids_long,aes(x= value, y = reorder(category,value))) +
geom_col(aes(fill = name),position = "dodge", show.legend = F,width = 0.7) +
scale_fill_manual(values = c("blue","firebrick4")) +
geom_text(aes(label = round(value,3)),color = "white",hjust = 0.9,size = 3) +
facet_wrap(~name,scales = "free_x")
ggplot(vids_long,aes(x= value, y = reorder(category,value))) +
geom_col(aes(fill = name),position = "dodge", show.legend = F) +
scale_fill_manual(values = c("blue","firebrick4")) +
geom_text(aes(label = round(value,3)),color = "white",hjust = 0.9,size = 3) +
facet_wrap(~name,scales = "free_x")
ggplot(vids_long,aes(x= value, y = reorder(category,value))) +
geom_col(aes(fill = name), show.legend = F) +
scale_fill_manual(values = c("blue","firebrick4")) +
geom_text(aes(label = round(value,3)),color = "white",hjust = 0.9,size = 3) +
facet_wrap(~ name,scales = "free_y") +
labs(title =  "Like dan Dislike Ratio per Kategori",
subtitle = "Youtube Trending Videos 2017",
x = "" , y = "Kategori Video")
vids_long2 <-  pivot_longer(data = vids.top.agg, cols =  c("like_ratio", "dislike_ratio"))
vids_long2
vids_long2$category <- tidytext :: reorder_within(x = vids_long2$category,
by = vids_long2$value,
within = vids_long2$name)
ggplot(vids_long2,aes(x= value, y = reorder(category,value))) +
geom_col(aes(fill = name),position = "dodge", show.legend = F,width = 0.7) +
scale_fill_manual(values = c("blue","firebrick4")) +
geom_text(aes(label = round(value,3)),color = "white",hjust = 0.9,size = 3) +
facet_wrap(~name,scales = "free")+
tidytext::scale_y_reordered()
agg_df <- aggregate.data.frame(x = list(like = vids.unik$likes,
dislike = vids.unik$dislikes),
by = list(category = vids.unik$category_id),mean)
summary(agg_df)
ggplot(agg_df,aes(x = category, y = like)) +
geom_col(aes(fill = like)) +
geom_line(aes(group = 1, y = dislike*72000/2350),size = 1.2,col = "red") +   # ini untuk buat line tambahan
scale_y_continuous(sec.axis = sec_axis(~.*2350/72000))
table(vids.agt$category_id, vids.agt$publish_when)
ggplot(vids.agt, aes(x = dislike_ratio, y = like_ratio)) +
geom_jitter(aes(size = views, col = likes)) +
facet_grid(publish_day ~ category_id)
ggplot(vids.agt, aes(x = dislike_ratio, y = like_ratio)) +
geom_jitter(aes(size = views, col = likes)) +
facet_wrap(publish_day ~ category_id)
# subset kategori pilihan
vids.ces <- vids[vids$category_id %in% c("Comedy", "Education", "Science and Technology"), ]
# cek level factor
levels(vids.ces$category_id)
# drop level yang tidak terpakai
vids.ces$category_id <- droplevels(vids.ces$category_id)
vids.ces
# tabulasi jumlah trending video per kategori berdasarkan tanggal
vids.ces <- as.data.frame(table(vids.ces$trending_date,vids.ces$category_id))
# ubah nama data frame
vids.ces <- setNames(vids.ces,c("trending_date","category","freq"))
vids.ces
#kalau ingin membiarkan leves kosong ada diplot
ggplot(vids.ces,aes(x = likes, y = dislikes)) +
geom_point(aes(color = category_id)) +
scale_color_discrete(drop = F)
# Wrangling
vids.unik.big <- vids.unik[vids.unik$likes > 100000,]
vids.unik.big <- aggregate.data.frame(x = list(likes = vids.unik.big$likes,
dislikes = vids.unik.big$dislikes,
comment = vids.unik.big$comment_count),
by = list(channel = vids.unik.big$channel_title),
FUN = sum)
vids.unik.big <- vids.unik.big[order(vids.unik.big$likes, decreasing = T),]
vids.unik.long <- pivot_longer(vids.unik.big[1:20,],
cols = c("likes","dislikes","comment"))
# Visualization
library(scales)
ggplot(data = vids.unik.long,aes(x = value, y = reorder(channel,value), fill = name)) +
geom_col(position = "dodge") +
scale_x_continuous(expand = c(0,0),
breaks = seq(0,2900000,500000),
labels = dollar_format(prefix = "Rp ")) +
theme_minimal() +
labs(title = "Most Trending Youtube Channel 2017",
subtitle = "Likes, Dislikes, and Comment Count Comparison",
x = "Channel", y = "Value") +
theme(legend.position = "bottom",legend.title = element_blank())
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
error = TRUE,
message = FALSE,
fig.align = "center"
)
options(scipen = 9999)
# data wrangling (data pre-processing + eda)
library(tidyverse)
# visualisasi
library(ggplot2)
library(plotly)
library(ggthemes)
theme_set(theme_minimal())
# beautify/tidying annotation graph
library(glue)
library(scales)
vids <- read.csv(file = "data-input/youtubetrends.csv")
str(vids)
vids <- read_csv(file = "data-input/youtubetrends.csv")
glimpse(vids)
# base R
head(subset(vids, select = c('publish_wday','comment_count','views')))
head(vids[,c("publish_wday","comment_count","views")])
knitr::include_graphics(path = "img/dplyr.png")
# versi dplyr
head(select(vids, publish_wday, comment_count, views))
# base R
head(subset(vids, subset = vids$views >= 10000000))
head(vids[vids$views > 10000000,])
# versi dplyr
head(filter(.data = vids, views > 10000000))
vids[vids$views > 1e7 & vids$category_id == "Music",]
# dplyr
filter(vids, views > 1e7, category_id == "Music")
knitr::include_graphics(path = "img/pipe.png")
# tanpa pipe
leave_house(get_dressed(take_a_bath(wake_up(me, time = "8:00")), pants = TRUE, shirt = TRUE),
motor = TRUE)
head(filter(.data = vids, views > 10000000))
vids %>%
filter(views > 1e7) %>%
head()
# solusi dengan base R
vids[vids$views>1e7,c('channel_title','views','likes')]
# solusi dengan dplyr + piping
vids %>%
filter(views > 1e7) %>%
select(channel_title, views, likes)
vids %>%
filter(views > 1e7) %>%
select(channel_title, views, likes)
vids %>%
select(channel_title, views, likes) %>%
filter(views > 1e7)
vids %>%
select(1:5, 9)
vids %>%
slice(4:7, 10)
# Base R
vids$likesratio <- vids$likes/vids$views
vids$commentratio <- vids$likes/vids$views
vids$dislikeratio <- vids$likes/vids$views
vids$likesratio <- vids$likes/vids$views
# dplyr
temp1 <- vids %>%
mutate(likesratio = likes/views,
commentratio = comment_count/views,
dislikesratio = dislikes/views,
likesratio = round(likesratio, 3)) %>%
head(7) %>%
select(title, likesratio, commentratio, dislikesratio)
temp1
temp1 %>%
mutate_if(is.numeric, ~round(., digits = 3))
mtcars %>%
mutate_if(is.numeric, as.factor)
# Base R
aggregate(vids$likesratio, FUN = mean, by = list(vids$category_id))
# dplyr
vids %>%
group_by(category_id) %>%
summarise(mean_likesratio = mean(likesratio),
jumlah_views = sum(views),
max_comment = max(comment_count))
vids %>%
mutate(likesratio = likes/views) %>%
group_by(category_id) %>%
mutate(mean_likesratio = mean(likesratio)) %>%
select(category_id, mean_likesratio) %>%
head(10)
# base R
dive6 <- head(vids[order(vids$views,decreasing = T),])
dive6[,c("title","views")]
# versi dplyr
vids %>%
select(title, views) %>%
arrange(desc(views)) %>%
head(5)
vids %>%
select(title, views) %>%
arrange(-views) %>%
head(5)
vids %>%
arrange(desc(views)) %>%
select(title, views) %>%
head(5)
vids %>%
top_n(views, n = 5) %>%
select(title, views)
# cara remove column
iris %>%
select(-c(Petal.Length, Sepal.Length))
vids %>%
top_n(likes, n = 5) %>%
select(channel_title, likes)
vids %>%
arrange(desc(likes)) %>%
select(channel_title, likes) %>%
head(5)
vids_favor <- vids %>%
group_by(category_id) %>%
summarise(total_views = sum(views)) %>%
arrange(desc(total_views)) %>%
head(10)
vids_favor
vids %>%
group_by(category_id) %>%
summarise(total_views = sum(views)) %>%
top_n(total_views, n = 10) %>%
ggplot(aes(y = reorder(category_id, total_views), x = total_views)) +
geom_col()
library(scales)
plot1 <-
vids_favor %>%
ggplot(aes(x = total_views, y = reorder(category_id, total_views))) +
geom_col(fill = "firebrick", alpha = 0.4) +
scale_x_continuous(breaks = seq(from = 0, to = 5e8, by = 5e7),
labels = number_format(scale = 1e-6, suffix = " M"))
plot1
ggplotly(plot1)
vids_favor2 <- vids %>%
group_by(category_id) %>%
summarise(total_views = sum(views),
total_likes = sum(likes)) %>%
arrange(desc(total_views)) %>%
head(10) %>%
mutate(
label = glue(
"Category ID: {category_id}
Total Views: {comma(total_views)}
Jumlah Likes: {comma(total_likes)}"
)
)
head(vids_favor2)
head(iris)
library(janitor)
iris <- iris %>%
clean_names()
iris
plot_iris <- iris %>%
mutate(label = glue("{species}
SP = {sepal_length}
PL = {petal_length}")) %>%
ggplot(aes(x = petal_length, y = sepal_length, text = label)) +
geom_point()
plot_iris
ggplotly(plot_iris, tooltip = "text")
plot2 <- ggplot(data = vids_favor2,
mapping = aes(
y = reorder(category_id, total_views),
x = total_views,
text = label
)) +
geom_col(fill = "firebrick", alpha = 0.6) +
labs(
title = "Favorability index by category id",
x = NULL,
y = NULL
)
plot2
ggplotly(plot2, tooltip = "text")
data_attrition <- read_csv(file = "data-input/data-attrition.csv")
head(data_attrition)
glimpse(data_attrition)
# agregasi data
data_agg <- data_attrition %>%
group_by(education_field) %>%
summarise(freq = n())
data_agg
# ggplot
plot1 <- data_agg %>%
ggplot(aes(x = freq, y = reorder(education_field, freq))) +
geom_col()
plot1
# ggplotly
ggplotly(plot1)
str_replace_all(string = "human_resources", pattern = "_", replacement = " ")
data_attrition %>%
mutate(
education_field = str_replace_all(
string = education_field,
pattern = "_",
replacement = " "
),
education_field = str_to_title(education_field)
) %>%
group_by(education_field) %>%
summarise(freq = n()) %>%
mutate(
percent = freq / sum(freq),
percent = percent * 100,
percent = round(percent, 1))
data_agg <- data_attrition %>%
mutate(
education_field = str_replace_all(
string = education_field,
pattern = "_",
replacement = " "
),
education_field = str_to_title(education_field)
) %>%
group_by(education_field) %>%
summarise(freq = n()) %>%
mutate(
percent = freq / sum(freq),
percent = round(percent * 100, 1),
label = glue("{freq} ({percent} %)"),
education_field = reorder(education_field, -freq)
)
data_agg
plot_edu <- data_agg %>%
ggplot(mapping = aes(x = education_field, y = freq, text = label)) +
geom_col(aes(fill = freq), alpha = 0.8 , show.legend = FALSE) +
labs(title = "Number of employee by education fields",
x = NULL,
y = NULL) +
scale_fill_gradient(low = "grey", high = "firebrick")
plot_edu
ggplotly(plot_edu, tooltip = "text")
# agregasi dataaa
data_agg <- data_attrition %>%
select(department, monthly_income, attrition)
data_agg
# ggplot
data_agg %>%
ggplot(aes(x = attrition, y = monthly_income)) +
geom_boxplot(aes(fill = department))
data_agg_income <- data_attrition %>%
select(department, attrition, monthly_income) %>%
mutate(attrition = str_to_title(attrition),
department = str_replace_all(string = department,
pattern = "_",
replacement = " "),
department = str_to_title(department),
department = str_replace_all(string = department,
pattern = "Research Development",
replacement = "Reserach & Development"),
attrition = as.factor(attrition),
department = as.factor(department))
head(data_agg_income)
plot_department <- ggplot(data = data_agg_income,
mapping = aes(x = attrition,
y = monthly_income)) +
geom_boxplot(aes(fill = department),
alpha = 0.7) +
scale_fill_manual(values = c("dodgerblue4", "firebrick", "orange")) +
scale_y_continuous(labels = unit_format(
scale = 1e-3,
prefix = "$",
suffix = "K"
)) +
coord_flip() +
facet_wrap(facets = ~department, ncol = 1) +
theme_minimal() +
theme(legend.position = "none") +
labs(title = "Monthly Income Distribution",
x = NULL,
y = NULL)
plot_department
ggplotly(plot_department)
knitr::include_graphics(path = "img/shiny architecture.png")
vids_favor2 <- vids %>%
group_by(category_id) %>%
summarise(total_views = sum(views),
total_likes = sum(likes)) %>%
arrange(desc(total_views)) %>%
head(10) %>%
mutate(
label = glue(
"Category ID: {category_id}
Total Views: {comma(total_views)}
Jumlah Likes: {comma(total_likes)}"
)
)
head(vids_favor2)
plot_iris <- iris %>%
mutate(label = glue("{species}
SP = {sepal_length}
PL = {petal_length}")) %>%
ggplot(aes(x = petal_length, y = sepal_length, text = label)) +
geom_point()
plot_iris
data_attrition %>%
mutate(
education_field = str_replace_all(
string = education_field,
pattern = "_",
replacement = " "
),
education_field = str_to_title(education_field)
) %>%
group_by(education_field) %>%
summarise(freq = n()) %>%
mutate(
percent = freq / sum(freq),
percent = percent * 100,
percent = round(percent, 1))
data_agg <- data_attrition %>%
mutate(
education_field = str_replace_all(
string = education_field,
pattern = "_",
replacement = " "
),
education_field = str_to_title(education_field)
) %>%
group_by(education_field) %>%
summarise(freq = n()) %>%
mutate(
percent = freq / sum(freq),
percent = round(percent * 100, 1),
label = glue("{freq} ({percent} %)"),
education_field = reorder(education_field, -freq)
)
data_agg
plot_edu <- data_agg %>%
ggplot(mapping = aes(x = education_field, y = freq, text = label)) +
geom_col(aes(fill = freq), alpha = 0.8 , show.legend = FALSE) +
labs(title = "Number of employee by education fields",
x = NULL,
y = NULL) +
scale_fill_gradient(low = "grey", high = "firebrick")
plot_edu
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
